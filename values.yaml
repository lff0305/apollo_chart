envs:
- dev
- sit
- uat
- prod
  
configdb:
  enabled: true
  imageName: bitnami/mysql
  imageTag: 8.0.25-debian-10-r4
  name: apollo-configdb
  port: 3306
  dbName: ApolloConfigDB
  userName: "apollo"
  password: "apollo"
  pvc: gp2
  rootPassword: "7zdXc72yzpNMzIVL9Z9N"
  connectionStringProperties: characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false
  nodeSelector: {}    
    

configService:
  name: apollo-configservice
  replicaCount: 1
  port: 8080
  imageName: apolloconfig/apollo-configservice
  imageTag: 1.8.2
  imagePullPolicy: IfNotPresent
  # imageTag: latest
  imagePullSecrets: []
  ingress:
    enabled: false
    annotations: { }
    hosts:
      - host: ""
        paths: [ ]
    tls: [ ]
  liveness:
    initialDelaySeconds: 100
    periodSeconds: 10
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 5
  config:
    # spring profiles to activate
    profiles: "github,kubernetes"
    # override apollo.config-service.url: config service url to be accessed by apollo-client 
    configServiceUrlOverride: ""
    # override apollo.admin-service.url: admin service url to be accessed by apollo-portal 
    adminServiceUrlOverride: ""
    # specify the context path, e.g. /apollo
    contextPath: ""
  # environment variables passed to the container, e.g. JAVA_OPTS
  env: {}
  strategy: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

adminService:
  name: apollo-adminservice
  fullNameOverride: ""
  replicaCount: 1
  port: 8090
  image:
    repository: apolloconfig/apollo-adminservice
    tag: "1.8.2"
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  liveness:
    initialDelaySeconds: 100
    periodSeconds: 10
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 5
  config:
    # spring profiles to activate
    profiles: "github,kubernetes"
    # specify the context path, e.g. /apollo
    contextPath: ""
  # environment variables passed to the container, e.g. JAVA_OPTS
  env: {}
  strategy: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}     

portalService:
  name: apollo-portal
  fullNameOverride: ""
  replicaCount: 1
  port: 8070
  type: ClusterIP
  image:
    repository: apolloconfig/apollo-portal
    tag: "1.8.2"
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  liveness:
    initialDelaySeconds: 100
    periodSeconds: 10
  readiness:
    initialDelaySeconds: 30
    periodSeconds: 5
  env: {}
  strategy: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  config:
    # spring profiles to activate
    profiles: "github,auth"
    # specify the meta servers, e.g.
    # dev: http://apollo-configservice-dev:8080
    # pro: http://apollo-configservice-pro:8080
    metaServers: {}
    # specify the context path, e.g. /apollo
    contextPath: ""
    # extra config files for apollo-portal, e.g. application-ldap.yml
    files: {}


portaldb:
  dbName: ApolloPortalDB
  connectionStringProperties: characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
